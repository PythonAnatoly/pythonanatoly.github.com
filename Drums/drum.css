html {
  font-size: 10px;
  background: grey;
}
body,html {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
}

.keys {
  display: flex;            /* This defines a flex container; inline or block depending on the given value. It enables a flex context for all its direct children. */
  flex: 1;                  /* This is the shorthand for flex-grow, flex-shrink and flex-basis combined. The second and third parameters (flex-shrink and flex-basis) are optional. Default is 0 1 auto. */
  min-height: 100vh;        /* The viewport height. Relative to 100% of the height of the viewport. Viewport = the browser window size. If the viewport is 50cm wide, 1vw = 0.5cm. */
  align-items: center;      /* Defines how the browser distributes space between and around flex items along the cross-axis of their container. This means it works like justify-content but in the perpendicular direction. */
  justify-content: center;  /* Defines how the browser distributes space between and around content items along the main axis of their container. */

}

.key {
  border: .4rem solid black;    /* The "rem" stands for "root em" i.e. relative to font-size of the root element. The rem unit is relative to the root—or the html—element. That means that we can define a single font size on the html element and define all rem units to be a percentage of that. */
  border-radius: .5rem;       
  margin: 1rem;
  font-size: 1.5rem;
  padding: 1rem .5rem;          /* vertical & horizontal */
  transition: all .09s ease;    /*  transitions allows you to change property values smoothly (from one value to another), over a given duration. The transition CSS property is a shorthand property for transition-property, transition-duration, transition-timing-function, and transition-delay. */
  width: 10rem;
  text-align: center;
  color: white;
  background: rgba(0,0,0,0.4);  /* RGBA color values are an extension of RGB color values with an alpha channel - which specifies the opacity of the object. The alpha parameter is a number between 0.0 (fully transparent) and 1.0 (fully opaque). */
  text-shadow: 0 0 .5rem black; /* offset-x | offset-y | blur-radius | color */
}

.playing {
  transform: scale(1.1);        /* This property allows you to rotate, scale, move, skew, etc., elements. scale(x,[y]) Defines a 2D scale transformation */
  border-color: #ffc600;
  box-shadow: 0 0 1rem #ffc600; /* | h-shadow | v-shadow | blur | color | */   
}

kbd {
  display: block;
  font-size: 4rem;
}

.sound {
  font-size: 1.2rem;
  text-transform: uppercase; /*  specifies how to capitalize an element's text. Possible values: capitalize, uppercase, lowercase, none, full-width. */
  letter-spacing: .1rem;
  color: #ffc600;
}



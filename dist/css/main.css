@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/*BREACKPOINTS for @media
  0 - 600px:      Phone
  600 - 900px:    Tablet portrait
  900 - 1200px:   Tablet landscape
  [1200 - 1800]   is where our normal styles apply
  1800px + :      Bid desktop
*/
body {
  font-family: "Roboto", sans-serif;
  font-size: 1.6rem;
  color: #333333; }

a,
a:link,
a:visited {
  text-decoration: none;
  color: #79a6d2;
  outline: none; }
  a:hover,
  a:link:hover,
  a:visited:hover {
    color: #0073e6; }

p {
  margin-bottom: 1rem;
  line-height: 1.3;
  font-size: 1.6rem;
  font-weight: 400; }

h1, h2, h3, h4 {
  margin-bottom: 1.5rem;
  font-family: "Roboto", sans-serif;
  font-weight: 500; }

h1 {
  font-size: 4.1rem; }

h2 {
  font-size: 3rem; }

h3 {
  font-size: 2.5rem; }

h4 {
  font-size: 2.1rem;
  margin: 3rem 0; }

em {
  font-weight: 500; }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-size: 62.5%; }

body {
  min-height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between; }

svg {
  width: 1.6rem;
  height: 1.6rem; }

.container {
  display: block;
  position: relative;
  width: 100%;
  max-width: 180rem;
  margin: 0 auto; }

.hidden {
  display: none; }

.invisible {
  color: transparent;
  background-color: transparent;
  opacity: 0; }

.round {
  border-radius: 50%; }

.flex-center {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -ms-flex-line-pack: center;
      align-content: center; }

kbd {
  border: 1px solid #808080;
  border-radius: 3px;
  padding: .2rem .5rem;
  background-color: #808080;
  color: #faf5f5; }
  kbd.kbd-small {
    font-size: 70%; }

ul {
  display: block;
  margin: 0 auto 2rem;
  min-width: 30rem; }
  @media only screen and (max-width: 37.5em) {
    ul {
      min-width: 100%; } }
  ul li {
    margin-bottom: 2rem;
    list-style: none;
    line-height: 1.5; }

.row {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin: 0 auto;
  padding: 0; }
  @media only screen and (max-width: 37.5em) {
    .row {
      display: block; } }

.row:not(:last-child) {
  margin-bottom: 0; }

div[class^="col-"]:not(:last-child) {
  margin-right: 0; }

.col-1 {
  width: 8.3333%; }

.col-2 {
  width: 16.6666%; }

.col-3 {
  width: 25%; }

.col-4 {
  width: 33.3333%; }

.col-5 {
  width: 41.6666%; }

.col-6 {
  width: 50%; }

.col-7 {
  width: 58.3333%; }

.col-8 {
  width: 66.6666%; }

.col-9 {
  width: 75%; }

.col-10 {
  width: 83.3333%; }

.col-11 {
  width: 91.6666%; }

.col-12 {
  width: 100%; }

.col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12 {
  min-height: inherit;
  padding: 0;
  margin: 0;
  min-height: 100px; }
  @media only screen and (max-width: 37.5em) {
    .col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12 {
      width: 100%; } }

/*

Примеры использования

1:
  <section class="container">
    <div class="row">
      <div class="col-6"></div>
      <div class="col-6"></div>
    </div>
  </section>

2:
  <section>
    <div class="row">
      <div class="col-6"></div>
      <div class="col-6"></div>
    </div>
  </section>

3:
  <div class="row">
    <div class="col-6"></div>
    <div class="col-6"></div>
  </div>

4:
  <div class="row">
    <div class="col-2">
      <div class="row">
        <div class="col-4"></div>
        <div class="col-4"></div>
        <div class="col-4"></div>
    </div>
    </div>
    <div class="col-3"></div>
    <div class="col-3"></div>
    <div class="col-3"></div>
  </div>

*/
.header {
  position: fixed;
  width: 100%;
  background-color: #eceaea;
  min-height: 6.4rem;
  z-index: 999; }
  @media only screen and (max-width: 37.5em) {
    .header {
      position: relative;
      z-index: 1; } }
  .header__avatar {
    display: block;
    position: absolute;
    top: 50%;
    left: 3rem;
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%);
    width: 5rem;
    height: 5rem;
    margin-right: 12rem;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 auto;
            flex: 0 0 auto;
    -webkit-transition: all .3s .1s;
    -o-transition: all .3s .1s;
    transition: all .3s .1s; }
    @media only screen and (max-width: 37.5em) {
      .header__avatar {
        display: none; } }

.about {
  min-height: 60vh;
  padding: 15rem 1rem 1rem;
  -webkit-box-shadow: 0 1px 11px rgba(0, 0, 0, 0.1);
          box-shadow: 0 1px 11px rgba(0, 0, 0, 0.1);
  background-color: white; }
  @media only screen and (max-width: 37.5em) {
    .about {
      padding: 5rem 1rem 1rem; } }
  @media only screen and (max-width: 56.25em) {
    .about {
      margin-top: 6rem; } }
  @media only screen and (max-width: 37.5em) {
    .about {
      margin-top: 0; } }
  .about svg {
    width: 2rem;
    height: 2rem; }
  .about__content {
    padding: 0; }
    @media only screen and (max-width: 37.5em) {
      .about__content {
        text-align: center; } }
  .about__h4 {
    margin-top: 5rem; }
  .about__ul {
    list-style: none;
    margin-bottom: 3rem;
    margin-left: 0; }
    @media only screen and (max-width: 37.5em) {
      .about__ul {
        display: block;
        margin: 3rem auto; } }
    .about__ul li {
      margin-bottom: 1rem;
      font-style: italic; }
      .about__ul li:before {
        content: "✓ "; }
  .about__slogan {
    font-size: 1.7rem; }
  .about__icon-holder {
    display: inline-block;
    padding: 5px;
    text-align: center; }
  .about__col-4 {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end; }
  .about__picture {
    display: block;
    width: 25vw;
    height: 25vw;
    max-width: 30rem;
    max-height: 30rem;
    overflow: hidden;
    margin: 0 3rem 0 0;
    opacity: .8;
    -webkit-transition: all .2s;
    -o-transition: all .2s;
    transition: all .2s; }
    @media only screen and (max-width: 37.5em) {
      .about__picture {
        display: block;
        margin: auto auto 3rem auto; } }
    .about__picture:hover {
      opacity: 1; }
    .about__picture img {
      display: block;
      width: inherit;
      height: inherit;
      max-width: inherit;
      max-height: inherit;
      -webkit-transition: all .3s .1s;
      -o-transition: all .3s .1s;
      transition: all .3s .1s; }

.education {
  min-height: 60vh;
  padding: 15rem 1rem 1rem;
  -webkit-box-shadow: 0 1px 11px rgba(0, 0, 0, 0.1);
          box-shadow: 0 1px 11px rgba(0, 0, 0, 0.1); }
  @media only screen and (max-width: 37.5em) {
    .education {
      padding: 5rem 1rem 1rem; } }
  .education__h4 {
    text-align: center; }
  .education__ul li {
    margin-bottom: 2rem;
    list-style: none; }
    .education__ul li:before {
      content: '- '; }

.skills {
  min-height: 60vh;
  padding: 15rem 1rem 1rem;
  -webkit-box-shadow: 0 1px 11px rgba(0, 0, 0, 0.1);
          box-shadow: 0 1px 11px rgba(0, 0, 0, 0.1); }
  @media only screen and (max-width: 37.5em) {
    .skills {
      padding: 5rem 1rem 1rem; } }
  .skills__h4 {
    text-align: center; }

.portfolio {
  min-height: 60vh;
  padding: 15rem 1rem 1rem;
  -webkit-box-shadow: 0 1px 11px rgba(0, 0, 0, 0.1);
          box-shadow: 0 1px 11px rgba(0, 0, 0, 0.1); }
  @media only screen and (max-width: 37.5em) {
    .portfolio {
      padding: 5rem 1rem 1rem; } }
  .portfolio__h3 {
    text-align: center; }
  .portfolio__h4 {
    text-align: center; }

.contacts {
  min-height: 90vh;
  padding-top: 10rem; }
  .contacts__container {
    padding: 2rem;
    min-width: 30rem;
    max-width: 20%;
    min-height: 20rem;
    margin: auto;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
  .contacts svg {
    width: 3.2rem;
    height: 3.2rem; }
  .contacts__h3 {
    text-align: center; }
  .contacts__p {
    text-align: center; }
  .contacts__icon-holder {
    display: block;
    padding: 5px;
    text-align: center;
    margin: 2rem .5rem; }
  .contacts .icon__telegram,
  .contacts .icon__email {
    fill: #79a6d2; }
    .contacts .icon__telegram:hover,
    .contacts .icon__email:hover {
      fill: #0073e6; }

.footer {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  min-height: 4.5rem;
  width: 100%;
  padding: 1rem;
  background-color: #eceaea; }
  .footer__p {
    color: #333333;
    text-align: center;
    margin: auto; }

/* Horizontal Navigation Panel */
.nav {
  margin: 0 auto;
  padding: 0;
  min-width: 20rem;
  max-width: 180rem;
  min-height: 6.4rem;
  -webkit-box-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);
          box-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }
  @media only screen and (max-width: 37.5em) {
    .nav {
      width: 100%; } }
  .nav ul {
    list-style: none;
    margin: 0 auto;
    padding: .5rem;
    min-width: inherit;
    max-width: inherit;
    min-height: inherit;
    text-align: center;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
  .nav li {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    margin: 0 1rem 0 0;
    padding: 0;
    height: 3.4rem;
    min-width: 2rem; }
    @media only screen and (max-width: 37.5em) {
      .nav li {
        margin: 0 .5rem 0 0; } }
    .nav li::before {
      content: "\200B"; }
  .nav a {
    display: inline-block;
    font-size: 1.6rem;
    color: #666666;
    margin: 0;
    padding: .5rem 1rem;
    border-radius: 3px;
    -webkit-transition: .1s all;
    -o-transition: .1s all;
    transition: .1s all; }
    @media only screen and (max-width: 37.5em) {
      .nav a {
        font-size: 1.4rem;
        padding: .2rem .5rem; } }
    .nav a:hover {
      color: #333333; }
  .nav__icon-home {
    display: block;
    margin: 0;
    width: 2rem;
    height: 2rem;
    fill: #666666; }
    .nav__icon-home:hover {
      fill: #333333; }
  .nav__photo {
    height: 100%; }
    .nav__photo img {
      display: block;
      height: inherit; }

.ul-centered {
  display: block;
  margin: 0 auto 2rem;
  width: 80rem; }
  @media only screen and (max-width: 56.25em) {
    .ul-centered {
      width: 40rem; } }
  @media only screen and (max-width: 37.5em) {
    .ul-centered {
      width: 100%; } }
  .ul-centered li {
    margin-bottom: 2rem;
    list-style: none;
    line-height: 1.5; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
